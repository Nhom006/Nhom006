# -*- coding: utf-8 -*-
"""graph.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pw8iP6RKp1yexmm64MRgHKYHvY3M1jlC
"""

#Biểu diễn đồ thị bằng Ma trận kề
class Graph:
    #Tạo ma trận
    def __init__(self,numvertex):
        self.adjMatrix = [[-1]*numvertex for x in range(numvertex)]
        self.numvertex = numvertex
        self.vertices = {}
        self.verticeslist =[0]*numvertex 

    #Cài đặt các giá trị đỉnh
    def set_vertex(self,vtx,id):
        if 0<=vtx<=self.numvertex:
            self.vertices[id] = vtx
            self.verticeslist[vtx] = id

    #Cài đặt các giá trị cạnh
    def set_edge(self,frm,to,cost=0):
        frm = self.vertices[frm]
        to = self.vertices[to]
        self.adjMatrix[frm][to] = cost
        #đối với đồ thị có hướng không thêm dòng này:
        self.adjMatrix[to][frm] = cost

    #Lấy đỉnh ra
    def get_vertex(self):
        return self.verticeslist

    #Lấy cạnh ra
    def get_edges(self):
        edges=[]
        for i in range (self.numvertex):
            for j in range (self.numvertex):
                if (self.adjMatrix[i][j]!=-1):
                    edges.append((self.verticeslist[i],self.verticeslist[j],self.adjMatrix[i][j]))
        return edges
        
    def get_matrix(self):
        return self.adjMatrix

G =Graph(5)
G.set_vertex(0,'0')
G.set_vertex(1,'1')
G.set_vertex(2,'2')
G.set_vertex(3,'3')
G.set_vertex(4,'4')
G.set_edge('0','1',0)
G.set_edge('0','4')
G.set_edge('1','2')
G.set_edge('1','3')
G.set_edge('1','4')
G.set_edge('2','3')
G.set_edge('3','4')

print("Adjacency Matrix of Graph")
print(G.get_matrix())

#This code is contributed by Rajat Singhal

# Biểu diễn đồ thị bằng danh sách kề
#Một class đại diện cho danh sách gần kề của nút
class AdjNode:
    def __init__(self, data):
        self.vertex = data
        self.next = None
 
class Graph:
    def __init__(self, vertices):
        self.V = vertices
        self.graph = [None] * self.V
 
    # Hàm thêm một cạnh trong một đồ thị vô hướng
    def add_edge(self, src, dest):
        # Thêm nút vào nút nguồn
        node = AdjNode(dest)
        node.next = self.graph[src]
        self.graph[src] = node
 
        # Thêm nút nguồn vào đích vì nó là biểu đồ vô hướng
        node = AdjNode(src)
        node.next = self.graph[dest]
        self.graph[dest] = node
 
    # Hàm in biểu đồ
    def print_graph(self):
        for i in range(self.V):
            print("Adjacency list of vertex {}\n head".format(i), end="")
            temp = self.graph[i]
            while temp:
                print(" -> {}".format(temp.vertex), end="")
                temp = temp.next
            print(" \n")
 
if __name__ == "__main__":
    graph = Graph(5)
    graph.add_edge(0, 1)
    graph.add_edge(0, 4)
    graph.add_edge(1, 2)
    graph.add_edge(1, 3)
    graph.add_edge(1, 4)
    graph.add_edge(2, 3)
    graph.add_edge(3, 4)
 
    graph.print_graph()
 
# This code is contributed by Kanav Malhotra